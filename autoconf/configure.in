dnl Process this file with autoconf to produce a configure script.
dnl

AC_INIT(src/main/version.c)

dnl We're using C.
dnl
AC_LANG_C

dnl Output a header file.
dnl
AC_CONFIG_HEADER(src/include/config.h:autoconf/header.in)

dnl Set directory to check for Configure scripts in.
dnl
AC_CONFIG_AUX_DIR(autoconf/scripts)

dnl Read in package details.
dnl
PACKAGE=`cat $srcdir/doc/PACKAGE`
VERSION=`cat $srcdir/doc/VERSION`
UCPACKAGE=`tr a-z A-Z < $srcdir/doc/PACKAGE`
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
AC_SUBST(UCPACKAGE)
AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE")
AC_DEFINE_UNQUOTED(PROGRAM_NAME, "$PACKAGE")
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")

dnl Check for compile-time options.
dnl
AC_ARG_ENABLE(debugging,
  [  --enable-debugging      compile with debugging symbols],
  if test "$enable_debugging" = "yes"; then
  	CFLAGS="-g -Wall"
	AC_DEFINE(DEBUG)
  fi
)
AC_ARG_ENABLE(profiling,
  [  --enable-profiling      compile with profiling support],
  if test "$enable_profiling" = "yes"; then
  	CFLAGS="-pg $CFLAGS"
  fi
)
AC_ARG_ENABLE(static,
  [  --enable-static         enable static linking],
)

dnl Check for various programs.
dnl
CFLAGS=${CFLAGS-"-O2 -Wall -s"}
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_CHECK_PROG(DO_GZIP, gzip, gzip -f9, touch)

dnl Check for various header files and set various other macros.
dnl
AC_DEFINE(HAVE_CONFIG_H)
AC_HEADER_STDC
AC_CHECK_FUNCS(getopt getopt_long mkstemp snprintf vsnprintf)
AC_CHECK_HEADERS(getopt.h mcheck.h sys/select.h)

test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'
AC_SUBST(INSTALL_DATA)

dnl Fudging for separate build directories.
dnl
subdirs=""
for i in `find $srcdir/src -type d -print | sed s,$srcdir/,,`; do
  subdirs="$subdirs $i"
done

dnl Stitch together the Makefile fragments.
dnl
mk_segments="autoconf/Makefile.in"
for i in vars.mk package.mk filelist.mk unreal.mk modules.mk \
         rules.mk link.mk depend.mk; do
	mk_segments="$mk_segments:autoconf/make/$i"
done

dnl Output files (and create build directory structure too).
dnl
AC_OUTPUT(Makefile:$mk_segments doc/lsm:doc/lsm.in
          doc/quickref.1:doc/quickref.1.in
          doc/$PACKAGE.spec:doc/spec.in
          src/.dummy:doc/NEWS,
  rm -f src/.dummy
  for i in $subdirs; do
  	test -d $i || mkdir $i
  done
, subdirs="$subdirs")

dnl EOF
